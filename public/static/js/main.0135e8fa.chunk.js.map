{"version":3,"sources":["components/Login.js","components/MapComponent.js","components/AdminComponent.js","components/UserDetailsComponent.js","components/UserComponent.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","checkIfUserAlreadyLoggedIn","a","axios","post","process","state","data","window","storage","user","Object","keys","length","navigate","authenticateRes","json","status","success","setState","showError","appState","isLoggedIn","name","id","is_admin","auth_token","textFieldChange","event","target","trim","value","authenticate","preventDefault","res","password","this","userData","history","push","className","style","display","type","placeholder","onChange","onClick","Component","withRouter","MapComponent","CMap","withScriptjs","withGoogleMap","zoom","positionMap","defaultZoom","center","lat","delat","lng","delng","children","assignDefaultPosition","lab","defaultLab","parseFloat","latitude","longitude","parseInt","marginBottom","googleMapURL","loadingElement","height","width","margin","containerElement","mapElement","labs","map","key","position","defaultProps","AdminComponent","redirectIfNotAuth","userState","getLabRecords","token","userName","get","addNewRecord","category","address","city","country","title","isNaN","labObj","newLab","logout","UserDetailsComponent","getLabRecord","labId","navigateToUser","match","params","renderHtml","UserComponent","searchLabs","openGoogleMaps","url","open","filterRecords","input","isFound","filter","forEach","toString","toLowerCase","includes","message","renderDiv","navigateToDetails","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0135e8fa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport '../css/login.css';\r\nimport {withRouter} from 'react-router';\r\n\r\nclass Login extends Component {\r\n\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            password: '',\r\n            showError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.checkIfUserAlreadyLoggedIn();\r\n    }\r\n\r\n    checkIfUserAlreadyLoggedIn = async () => {\r\n        let res = await axios.post(`${process.env.REACT_APP_URL}/login`,this.state);\r\n        let data = window.storage;\r\n        if(data && data != null && data.user && Object.keys(data.user).length !== 0 )\r\n        {\r\n            this.navigate(data.user);\r\n        }\r\n    }\r\n\r\n    navigate(userData)\r\n    {\r\n             if(userData.is_admin == 1)\r\n             {\r\n                  this.props.history.push('/admin');\r\n             }\r\n             else\r\n             {\r\n                  this.props.history.push('/user');\r\n             }\r\n    }\r\n\r\n    authenticateRes = (json) => {\r\n        \r\n        if(json.status == 200 && json.data && json.data.success == true)\r\n        {\r\n             this.setState({showError:false});\r\n             let userData = {\r\n                name: json.data.data.name,\r\n                id: json.data.data.id,\r\n                is_admin: json.data.data.is_admin,\r\n                auth_token: json.data.data.auth_token,\r\n             };\r\n             let appState = {\r\n                isLoggedIn: true,\r\n                user: userData\r\n             };\r\n             window.storage = appState;\r\n             this.navigate(appState.user);\r\n        }\r\n        else\r\n        {\r\n           this.setState({showError:true});\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    textFieldChange = (event) => \r\n    {\r\n        let name = event.target.name.trim();\r\n        let value = event.target.value.trim();\r\n        this.setState({[name]:value});\r\n    }\r\n\r\n    authenticate = async (event) =>\r\n    {\r\n        event.preventDefault();\r\n        let res = await axios.post(`${process.env.REACT_APP_URL}/login`,this.state);\r\n        this.authenticateRes(res);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n         <div className=\"wrapper fadeInDown\">\r\n            <div className=\"error-msg\" style={{display:!this.state.showError ? \"none\" : \"block\"}}>\r\n                  Please Enter Valid Credentials to Proceed\r\n            </div>\r\n           <div className=\"fadeIn first\">\r\n               <h4 id=\"logText\">LOG IN</h4>\r\n           </div>\r\n            <div id=\"formContent\">\r\n              <form>\r\n                <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"name\" placeholder=\"name\" onChange={this.textFieldChange} />\r\n                <input type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"password\" onChange={this.textFieldChange} />\r\n                <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" onClick={this.authenticate} />\r\n              </form>\r\n          \r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Login);","import React, { Component } from 'react';\r\nimport {GoogleMap,withScriptjs,withGoogleMap,Marker,InfoWindow} from 'react-google-maps';\r\n\r\nexport default class MapComponent extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            delat:0,\r\n            delng:0,\r\n            defaultZoom:2\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_MAPS_KEY}`\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n         this.assignDefaultPosition();\r\n    } \r\n\r\n    componentWillReceiveProps(props)\r\n    {\r\n         this.assignDefaultPosition();\r\n    }\r\n\r\n    CMap = withScriptjs(withGoogleMap(props =>\r\n        {\r\n            return (\r\n               <GoogleMap zoom = {props.positionMap.defaultZoom} center = {{lat:props.positionMap.delat,lng:props.positionMap.delng}}>\r\n                    {props.children}\r\n               </GoogleMap>\r\n            );\r\n        }\r\n      ));\r\n\r\n    assignDefaultPosition = () =>  \r\n    {\r\n        let lab = this.props.defaultLab;\r\n        let zoom = this.props.zoom;\r\n        if(lab)\r\n        {\r\n            let lat  = parseFloat(lab.latitude);\r\n            let lng =  parseFloat(lab.longitude);\r\n\r\n            if(!zoom)\r\n            {\r\n                zoom = 2;\r\n            }\r\n            this.setState({delat:lat,delng:lng,defaultZoom:parseInt(zoom)});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{marginBottom:\"3%\"}}>\r\n                 <div>   \r\n                         <this.CMap \r\n                             googleMapURL={this.props.googleMapURL}\r\n                             loadingElement={<div style={{ height: `500px`,width:'100%',margin:'auto' }} />}\r\n                                     containerElement={<div style={{ height: `500px`,width:'100%',margin:'auto' }} />}\r\n                                     mapElement={<div style={{ height: `500px`,width:'100%',margin:'auto' }} />}\r\n                                     positionMap={this.state}\r\n                         >\r\n                        {  \r\n                            this.props.labs.map( lab => (\r\n                                <Marker \r\n                                key = {lab.id}\r\n                                position = {{lat:parseFloat(lab.latitude),lng:parseFloat(lab.longitude)}}\r\n                                />\r\n                            ))\r\n                        }\r\n                         </this.CMap>\r\n                 </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport MapComponent from './MapComponent';\r\nimport '../css/admin.css';\r\n\r\nexport default class AdminComponent extends Component {\r\n    \r\n    constructor()\r\n    {\r\n        super();\r\n        this.state ={\r\n            userState: window.storage,\r\n            token: '',\r\n            labs: [],\r\n            userName: '',\r\n            latitude:'',\r\n            longitude:'',\r\n            category:'',\r\n            address:'',\r\n            city: '',\r\n            country: '',\r\n            title:'',\r\n            defaultLab:{\r\n                latitude:0,\r\n                longitude:0\r\n            }\r\n        }\r\n    }\r\n\r\n    textFieldChange = (event) => \r\n    {\r\n        let name = event.target.name.trim();\r\n        let value = event.target.value.trim();\r\n        this.setState({[name]:value});\r\n    }\r\n\r\n\r\n    componentDidMount()\r\n    {\r\n          this.redirectIfNotAuth();\r\n          this.getLabRecords();\r\n    }\r\n\r\n    redirectIfNotAuth = () =>\r\n    {\r\n        let appState = this.state.userState;\r\n        if(!this.state.userState || !appState || !appState.isLoggedIn || appState.user.is_admin == 0)\r\n        {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    \r\n    getLabRecords = async () =>\r\n    {\r\n        let token = '';\r\n        if(this.state.userState)\r\n        { \r\n            token = this.state.userState.user.auth_token;\r\n            this.setState({token:token});\r\n            this.setState({userName:this.state.userState.user.name});\r\n            let res = await axios.get(`${process.env.REACT_APP_URL}/labs?token=${token}`);\r\n            let labs = res.data.labs;\r\n            this.setState({labs})\r\n        }\r\n    }\r\n\r\n    addNewRecord = async () => {\r\n        let labs = this.state.labs;\r\n        let category = this.state.category;\r\n        let address = this.state.address;\r\n        let city = this.state.city;\r\n        let country = this.state.country;\r\n        let title = this.state.title;\r\n\r\n        if(!isNaN(this.state.latitude) && !isNaN(this.state.longitude) && category && address && city && country && title)\r\n        {\r\n            let latitude = parseFloat(this.state.latitude);\r\n            let longitude = parseFloat(this.state.longitude);\r\n            let labObj = {\r\n              latitude,\r\n              longitude,\r\n              category,\r\n              address,\r\n              city,\r\n              country,\r\n              title\r\n            }\r\n           let res = await axios.post(`${process.env.REACT_APP_URL}/labs?token=${this.state.token}`,labObj);\r\n           let newLab = res.data.lab;\r\n           labs.push(newLab);\r\n           let defaultLab = this.state.defaultLab;\r\n           defaultLab.latitude = newLab.latitude;\r\n           defaultLab.longitude = newLab.longitude;\r\n           this.setState({labs,defaultLab:defaultLab,latitude: '',\r\n            longitude: '',\r\n            category: '',\r\n            address: '',\r\n            city: '',\r\n            country: '',\r\n            title: ''});\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        window.storage = {};\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"container\">\r\n                \r\n                <div className=\"form-group\">\r\n                    <label id=\"label\">Welcome {this.state.userName}</label>\r\n                    <button className=\"btn btn-danger\" onClick= {this.logout}>Logout</button>\r\n                </div>\r\n                <div>\r\n                    <MapComponent {...this.state} />\r\n                </div>   \r\n                <div className=\"form2\">\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.textFieldChange} name=\"title\" id=\"formField1\" value={this.state.title} placeholder=\"Title\" />\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.textFieldChange} name=\"category\" id=\"formField2\" value={this.state.category} placeholder=\"Category\" />\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.textFieldChange} name=\"latitude\" id=\"formField1\" value={this.state.latitude} placeholder=\"Latitude\" />\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.textFieldChange} name=\"longitude\" id=\"formField2\" value={this.state.longitude} placeholder=\"Longitude\" />\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.textFieldChange} name=\"address\" id=\"formField1\" value={this.state.address} placeholder=\"Address\" />\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.textFieldChange} name=\"city\" id=\"formField2\" value={this.state.city} placeholder=\"City\" />\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.textFieldChange} name=\"country\" id=\"formField2\" value={this.state.country} placeholder=\"Country\" />\r\n                    <button className=\"btn btn-danger\" id=\"formField3\"  onClick={this.addNewRecord}>Add New Lab</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport MapComponent from './MapComponent';\r\nimport '../css/userdetails.css';\r\n\r\nexport default class UserDetailsComponent extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n       super(props);\r\n       this.state = {\r\n           labId: props.match.params.labId,\r\n           lab: {},\r\n           userState: window.storage,\r\n           token:'',\r\n            defaultLab:{\r\n                latitude:0,\r\n                longitude:0\r\n            },\r\n            labs:[]\r\n       }\r\n    }\r\n\r\n\r\n   componentDidMount()\r\n   {\r\n      this.redirectIfNotAuth();\r\n      this.getLabRecord();\r\n   }\r\n\r\n   redirectIfNotAuth = () =>\r\n   {\r\n       let appState = this.state.userState;\r\n       if(!this.state.userState || !appState || !appState.isLoggedIn || appState.user.is_admin == 1)\r\n       {\r\n           this.props.history.push('/');\r\n       }\r\n   }\r\n\r\n   getLabRecord = async () =>\r\n   {\r\n        let token = '';\r\n        if(this.state.userState)\r\n        { \r\n            token = this.state.userState.user.auth_token;\r\n            this.setState({token:token})\r\n            let res = await axios.get(`${process.env.REACT_APP_URL}/getLab?token=${token}&labId=${this.state.labId}`);\r\n            if(res.data.status == 200)\r\n            {\r\n                let lab = res.data.lab;\r\n                let labs = this.state.labs;\r\n\r\n                labs.push(lab);\r\n                let defaultLab = this.state.defaultLab;\r\n                defaultLab.latitude = parseFloat(lab.latitude);\r\n                defaultLab.longitude = parseFloat(lab.longitude);\r\n\r\n                this.setState({lab,defaultLab,labs});\r\n            }\r\n        }\r\n   }\r\n\r\n\r\n   navigateToUser = () => {\r\n       this.props.history.push('/user');\r\n   }\r\n\r\n    render() {\r\n\r\n        let renderHtml = 'Loading...';\r\n        let lab = this.state.lab;\r\n        if(Object.keys(lab).length > 0)\r\n        {\r\n            renderHtml = \r\n            <div id=\"detailsDiv\">\r\n                <div id=\"details\">\r\n                    <button type=\"button\" id=\"backBtn\" className=\"btn btn-secondary\" onClick={this.navigateToUser}>Back</button>\r\n                    <div className=\"contentGroup\">\r\n                         <div className=\"label\">Title</div>\r\n                         <div className=\"value\">{lab.title}</div>\r\n                    </div>\r\n                    <div className=\"contentGroup\">\r\n                         <div className=\"label\">Category</div>\r\n                         <div className=\"value\">{lab.category}</div>\r\n                    </div>\r\n                    <div className=\"contentGroup\">\r\n                         <div className=\"label\">Address</div>\r\n                         <div className=\"value\">{lab.address}</div>\r\n                    </div>\r\n                    <div className=\"contentGroup\">\r\n                         <div className=\"label\">City</div>\r\n                         <div className=\"value\">{lab.city}</div>\r\n                    </div>\r\n                    <div className=\"contentGroup\">\r\n                         <div className=\"label\">Country</div>\r\n                         <div className=\"value\">{lab.country}</div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"map\">\r\n                     <MapComponent zoom=\"11\"{...this.state} />\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n               {renderHtml}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport '../css/user.css';\r\nimport UserDetailsComponent from './UserDetailsComponent';\r\n\r\nexport default class UserComponent extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state ={\r\n            userState: window.storage,\r\n            token: '',\r\n            labs: [],\r\n            searchLabs: [],\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n          this.redirectIfNotAuth();\r\n          this.getLabRecords();\r\n    }\r\n\r\n    redirectIfNotAuth = () =>\r\n    {\r\n        let appState = this.state.userState;\r\n        if(!this.state.userState || !appState || !appState.isLoggedIn || appState.user.is_admin == 1)\r\n        {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    getLabRecords = async () =>\r\n    {\r\n        let token = '';\r\n        if(this.state.userState)\r\n        { \r\n            token = this.state.userState.user.auth_token;\r\n            this.setState({token:token})\r\n            let res = await axios.get(`${process.env.REACT_APP_URL}/labs?token=${token}`);\r\n            let labs = res.data.labs;\r\n            this.setState({labs,searchLabs:labs})\r\n        }\r\n    }\r\n\r\n    openGoogleMaps = (lab) =>\r\n    {\r\n        let url =`https://www.google.com/maps/search/?api=1&query=${lab.latitude},${lab.longitude}`;\r\n        window.open(url, \"_blank\");\r\n    }\r\n\r\n\r\n    logout = () => {\r\n        window.storage = {};\r\n        this.props.history.push('/');\r\n    }\r\n\r\n\r\n    filterRecords = (event) => {\r\n         let input = event.target.value.trim();\r\n         let labs = this.state.labs;\r\n\r\n         let isFound = false;\r\n         labs = labs.filter( (lab) => { \r\n              isFound = false;\r\n              Object.keys(lab).forEach( (key) => {\r\n                   let value = lab[key] || '';\r\n                   value = value == null ? '' : value.toString();\r\n                   if(input === '' || value.toLowerCase().includes(input.toLowerCase()))\r\n                   {\r\n                       isFound = true;\r\n                       return;\r\n                   }\r\n              });\r\n              if(isFound)\r\n                 return true;\r\n              return false;\r\n         });\r\n\r\n         if(labs.length == 0)\r\n         {\r\n            this.setState({searchLabs:labs,message:'No records Found'});\r\n         }\r\n         else\r\n         {\r\n            this.setState({searchLabs:labs,message: ''});\r\n         }\r\n    }\r\n\r\n    navigateToDetails(lab)\r\n    {\r\n        this.props.history.push(`/userDetails/${lab.id}`);\r\n    }\r\n\r\n    render() {\r\n\r\n        let labs = this.state.searchLabs;\r\n        let renderHtml = 'Loading...';\r\n        let message = this.state.message;\r\n\r\n        if(message !== '')\r\n        {\r\n            renderHtml = <div className=\"info-msg\">\r\n                            {message}\r\n                         </div>\r\n        }\r\n\r\n        if(labs && labs.length > 0)\r\n        {\r\n            let renderDiv = labs.map( (lab) => {\r\n                return(\r\n                    <div key={lab.id} className=\"card\">\r\n                        <div className=\"card-body\">\r\n                           <h5 className=\"card-title\">{lab.title}</h5>\r\n                           <p className=\"card-text\">Category: {lab.category}</p>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                               <button type=\"button\" className=\"btn btn-secondary\" onClick={() => {this.navigateToDetails(lab)}}>View Details</button>\r\n                               <button className=\"btn btn-success\" onClick={() => {this.openGoogleMaps(lab)}}>View on Maps</button>\r\n                        </div>\r\n                    </div>\r\n                );   \r\n            });\r\n\r\n            renderHtml = \r\n                <div className=\"card-columns\">\r\n                        {renderDiv}\r\n                </div>\r\n           \r\n        }\r\n\r\n        return (\r\n            <div className = \"container\">\r\n                \r\n                <div className=\"form-group has-search\">\r\n                    <span className=\"fa fa-search form-control-feedback\"></span>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search for Labs\" onChange={this.filterRecords}/>\r\n                    <button className=\"btn btn-danger\" onClick= {this.logout}>Logout</button>\r\n                </div>\r\n                <div>\r\n                      {renderHtml}\r\n                </div>    \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport AdminComponent from './components/AdminComponent';\nimport UserComponent from './components/UserComponent';\nimport UserDetailsComponent from './components/UserDetailsComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n            <div>\n               <Route exact path = \"/\" component = {Login} />\n               <Route exact path = \"/user\" component = {UserComponent} />\n               <Route exact path = \"/admin\" component = {AdminComponent} />\n               <Route exact path = \"/userDetails/:labId\" component = {UserDetailsComponent} />\n            </div>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}